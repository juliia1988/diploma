document.getElementById("predictionForm").addEventListener("submit", async function (e) {
    e.preventDefault();

    const submitButton = document.querySelector("button[type='submit']");
    const loadingSpinner = document.getElementById("loading");
    const resultDiv = document.getElementById("result");

    const Amh = parseFloat(document.getElementById("amh").value);
    const Fsh = parseFloat(document.getElementById("fsh").value);
    const Pcos = parseInt(document.getElementById("pcos").value);
    
    const LhFsh = parseFloat(document.getElementById("lh_fsh").value) || 0;
    const Estradiol = parseFloat(document.getElementById("estradiol").value) || 0;
    const Afc = parseInt(document.getElementById("afc").value) || 0;
    const Prl = parseFloat(document.getElementById("prl").value) || 0;
    const Glucose = parseFloat(document.getElementById("glucose").value) || 0;
    const Age = parseInt(document.getElementById("age").value) || 0;

    if (isNaN(Amh) || isNaN(Fsh) || isNaN(Pcos)) {
        alert("AMH, FSH —Ç–∞ PCOS —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º–∏ –ø–æ–ª—è–º–∏!");
        return;
    }

    const data = { Amh, Fsh, Pcos, LhFsh, Estradiol, Afc, Prl, Glucose, Age };

    try {
        loadingSpinner.classList.remove("d-none");
        submitButton.disabled = true;
        resultDiv.classList.add("d-none");

        const response = await fetch("http://localhost:5233/api/classification/classify-extended", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
        });

        const textResponse = await response.text();
        console.log("Raw response:", textResponse);

        if (!response.ok) {
            throw new Error(`HTTP Error ${response.status}: ${textResponse}`);
        }

        const resultData = JSON.parse(textResponse);

        loadingSpinner.classList.add("d-none");
        submitButton.disabled = false;
        resultDiv.classList.remove("d-none", "alert-danger", "alert-warning", "alert-success");

        let resultText = "";
        let alertClass = "";

        // üîπ –ì—Ä—É–ø–∞ 1 (—è–∫—ñ—Å–Ω–∞ —è–π—Ü–µ–∫–ª—ñ—Ç–∏–Ω–∞)
        if (resultData.group === 1) {
            alertClass = "alert-success";
            resultText = `
                <strong>üü¢ –í–∏—Å–æ–∫–∞ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å —è–∫—ñ—Å–Ω–æ—ó —è–π—Ü–µ–∫–ª—ñ—Ç–∏–Ω–∏!</strong><br>
                –í—Å—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –≤ –Ω–æ—Ä–º—ñ. –í–∞—à –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –∑–∞–±–æ—Ä—É —è–π—Ü–µ–∫–ª—ñ—Ç–∏–Ω–∏.
            `;
        }
        // üîπ –ì—Ä—É–ø–∞ 0 (–Ω–∏–∑—å–∫–∞ —è–∫—ñ—Å—Ç—å)
        else if (resultData.group === 0) {
            alertClass = "alert-danger";
            resultText = `
                <strong>üî¥ –ù–∏–∑—å–∫–∞ —è–∫—ñ—Å—Ç—å —è–π—Ü–µ–∫–ª—ñ—Ç–∏–Ω–∏.</strong><br>
                –í–∞—à—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ —Å–≤—ñ–¥—á–∞—Ç—å –ø—Ä–æ –º–æ–∂–ª–∏–≤—ñ –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ñ –ø–æ—Ä—É—à–µ–Ω–Ω—è. –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –∑ –ª—ñ–∫–∞—Ä–µ–º.
            `;
        }
        // üîπ –ì—Ä—É–ø–∞ -1 (–Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω–æ)
        else {
            alertClass = "alert-warning";
            resultText = `
                <strong>üü° –ù–µ–º–æ–∂–ª–∏–≤–æ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —è–∫—ñ—Å—Ç—å —è–π—Ü–µ–∫–ª—ñ—Ç–∏–Ω–∏.</strong><br>
                –î–µ—è–∫—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –≤–∏—Ö–æ–¥—è—Ç—å –∑–∞ –º–µ–∂—ñ –æ—á—ñ–∫—É–≤–∞–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å. –ú–æ–∂–ª–∏–≤–æ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∫–æ–≤–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è.
            `;
        }

        resultDiv.classList.add(alertClass);
        resultDiv.innerHTML = resultText;

    } catch (error) {
        console.error("Error:", error);
        loadingSpinner.classList.add("d-none");
        submitButton.disabled = false;
        resultDiv.classList.remove("d-none", "alert-success", "alert-warning");
        resultDiv.classList.add("alert-danger");
        resultDiv.innerHTML = `‚ö†Ô∏è Error: ${error.message}`;
    }
});
